env:
  GODOT_VERSION: 4.4.0

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  web:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Create staging directory
        run: mkdir -v -p build/web

      - name: Build
        run: godot -v --export-release --headless "Web"



      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "UPDATE GITHUB PAGES"

      - name: Zip Web artifacts
        run: zip -r game_web.zip build/web

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_web
          path: game_web.zip
  release:
    needs: [web, linux, windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_web
      - name: Version
        id: version
        run: |
          echo $GITHUB_WORKSPACE
          
          # Get the current date
          $DATE = Get-Date -Format "yyyy.Mdd"

          # Get the current hour and minute without leading zero for the hour
          # Get the current hour and minute
          $HOUR = [int](Get-Date -Format "HH") # Convert hour to integer to strip any leading zero
      
          # If the hour is 0 (midnight), set it to an empty string
          if ($HOUR -eq 0) {
            $HOUR = ''
          }
                
          $MINUTE = Get-Date -Format "mm" # Keep minutes as-is
      
          # Construct the time, omitting hour if it's empty
          $TIME = "$HOUR$MINUTE"
          
          # Construct the version using DATE and TIME
          $VERSION = "$DATE.$TIME"
          Write-Output "Generated version: $VERSION"
          # Export version as an output
          echo "version=$VERSION" >> $env:GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          body: |
            Release notes for ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
    
      - name: test
        run: ls

      - name: Upload Web Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_web.zip
          asset_name: Godot_Game_Web.zip
          asset_content_type: application/zip